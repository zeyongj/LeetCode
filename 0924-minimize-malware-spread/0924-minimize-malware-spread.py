class Solution:
    def minMalwareSpread(self, graph: List[List[int]], initial: List[int]) -> int:
        n=len(graph)
        par=[-1]*n
        size=[1]*n
        
        for i in range(n):
            par[i]=i
        
        def findpar(i):
            if par[i]==i:
                return i
            else:
                par[i]=findpar(par[i])
                return par[i]

        def merge(i1,i2):
            if size[i1]>=size[i2]:
                par[i2]=i1
                size[i1]+=size[i2]
            else:
                par[i1]=i2
                size[i2]+=size[i1]
            
        for i in range(n):
            for j in range(n):
                if graph[i][j]==1:
                    p1=findpar(i)
                    p2=findpar(j)
                    # print(i,p1,j,p2)
                    if p1!=p2:
                        merge(p1,p2)
                        # print(par[i],size[i],par[j],size[j],56)
        
        inf=[0]*n
        for i in initial:
            p=findpar(i)
            inf[p]+=1
        
        mini=-1
        ans=-1
        # print(par)
        # print(size)
        initial.sort()
        for i in initial:
            # print(i)
            p=findpar(i)
            # print(i,p,size[p])
            if inf[p]==1 and size[p]>mini:
                ans=i
                mini=size[p]
                
        return initial[0] if ans==-1 else ans
